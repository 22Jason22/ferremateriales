# Generated by Django 5.2.5 on 2025-09-01 20:08

import django.db.models.deletion
import smart_selects.db_fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(help_text='The official name of the organization.', max_length=100, unique=True, verbose_name='Name')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the organization is currently active.', verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text="The person's first name.", max_length=25, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, help_text="The person's middle name (optional).", max_length=25, null=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(help_text="The person's last name.", max_length=25, verbose_name='Last Name')),
                ('second_last_name', models.CharField(blank=True, help_text="The person's second last name (optional).", max_length=25, null=True, verbose_name='Second Last Name')),
                ('birth_date', models.DateField(blank=True, help_text="The person's date of birth.", null=True, verbose_name='Birth Date')),
                ('sex', models.BooleanField(choices=[(True, 'Man'), (False, 'Woman')], default=True, help_text="The person's biological sex.", verbose_name='Sex')),
                ('is_venezuelan', models.BooleanField(default=True, help_text='Indicates if the person is Venezuelan.', verbose_name='Venezuelan')),
                ('identity_number', models.CharField(help_text="The person's national identity number.", max_length=8, verbose_name='Identity Number')),
                ('marital_status', models.PositiveSmallIntegerField(choices=[(1, 'Single'), (2, 'Married'), (3, 'Divorced'), (4, 'Widowed')], help_text="The person's marital status.", verbose_name='Marital Status')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the person record is active.', verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
            },
        ),
        migrations.CreateModel(
            name='OrganizationalUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the organizational unit.', max_length=25, unique=True, verbose_name='Name')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the organizational unit is currently active.', verbose_name='Active')),
                ('organization', models.ForeignKey(help_text='The organization this unit belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='organizational_units', to='human_resources.organization', verbose_name='Organization')),
                ('parent_organization', models.ForeignKey(blank=True, help_text='The parent organizational unit, if any.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_units', to='human_resources.organizationalunit', verbose_name='Parent Organization')),
            ],
            options={
                'verbose_name': 'Organizational Unit',
                'verbose_name_plural': 'Organizational Units',
            },
        ),
        migrations.CreateModel(
            name='JobPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title of the job position.', max_length=50, unique=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, help_text='A detailed description of the job responsibilities.', null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the job position is currently active.', verbose_name='Active')),
                ('organizational_unit', models.ForeignKey(help_text='The organizational unit where this job position is located.', on_delete=django.db.models.deletion.CASCADE, related_name='job_positions', to='human_resources.organizationalunit', verbose_name='Organizational Unit')),
            ],
            options={
                'verbose_name': 'Job Position',
                'verbose_name_plural': 'Job Positions',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hire_date', models.DateField(help_text='The date the employee was hired.', verbose_name='Hire Date')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the employee record is active.', verbose_name='Active')),
                ('job_position', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='organizational_unit', chained_model_field='organizational_unit', help_text="The employee's job position.", on_delete=django.db.models.deletion.CASCADE, related_name='employees_in_position', to='human_resources.jobposition', verbose_name='Job Position')),
                ('organization', models.ForeignKey(help_text='The organization the employee belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='human_resources.organization', verbose_name='Organization')),
                ('organizational_unit', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='organization', chained_model_field='organization', help_text='The organizational unit the employee works in.', on_delete=django.db.models.deletion.CASCADE, related_name='employees_in_unit', to='human_resources.organizationalunit', verbose_name='Organizational Unit')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
            },
        ),
    ]
